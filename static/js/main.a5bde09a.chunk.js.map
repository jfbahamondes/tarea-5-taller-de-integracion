{"version":3,"sources":["redux/reducers/ExampleReducer.ts","redux/actions/types.ts","redux/reducers/index.ts","components/common/CenteredLoader.tsx","components/HomePage/HomePage.tsx","components/Episode/Episode.tsx","components/Character/Character.tsx","components/Place/Place.tsx","components/common/SearchBar.tsx","components/Search/Search.tsx","components/Main.tsx","redux/actions/ExampleActions.ts","App.tsx","components/common/constants.ts","serviceWorker.ts","index.tsx"],"names":["INITIAL_STATE","errorFetching","loading","info","undefined","example","state","action","type","payload","combineReducers","CenteredLoader","style","position","top","left","color","height","width","GET_EPISODES","gql","HomePage","useQuery","variables","$pages","error","data","fetchMore","episodes","next","page","updateQuery","prev","fetchMoreResult","results","count","display","flexWrap","justifyContent","map","episode","index","href","id","margin","textDecoration","key","backgroundColor","padding","borderRadius","name","air_date","Episode","useParams","GET_EPISODE","console","log","marginTop","characters","length","character","textAlign","src","image","alt","Character","GET_CHARACTER","marginBottom","species","gender","status","origin","location","Place","GET_LOCATION","dimension","residents","useStyles","makeStyles","theme","createStyles","root","alignItems","input","marginLeft","spacing","flex","iconButton","divider","SearchBar","classes","useState","search","setSearch","Paper","component","className","InputBase","value","onChange","e","target","placeholder","inputProps","IconButton","aria-label","onClick","window","Search","loadingEpisodes","dataEpisodes","fetchMoreEpisodes","GET_CHARACTERS","loadingCharacters","dataCharacters","fetchMoreCharacters","GET_LOCATIONS","loadingLocations","dataLocations","fetchMoreLocations","locations","actionsReducers","setExampleInfo","dispatch","connector","connect","props","useEffect","exact","path","client","ApolloClient","uri","createMuiTheme","palette","primary","blue","secondary","main","light","dark","contrastText","App","store","createStore","reducer","applyMiddleware","ReduxThunk","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5bde09a.chunk.js","sourcesContent":["import { EXAMPLE_TYPE } from \"../actions/types\";\n\nexport interface ExampleInfo {\n  example: string;\n}\n\nexport interface ExampleActionInterface {\n  type: string;\n  payload?: ExampleInfo;\n}\n\nexport interface ExampleInterface {\n  errorFetching: string;\n  loading: boolean;\n  info?: ExampleInfo;\n}\n\nconst INITIAL_STATE: ExampleInterface = {\n  errorFetching: \"\",\n  loading: false,\n  info: undefined\n};\n\nconst example = (\n  state: ExampleInterface = INITIAL_STATE,\n  action: ExampleActionInterface\n): ExampleInterface => {\n  switch (action.type) {\n    case EXAMPLE_TYPE:\n      return {\n        ...state,\n        ...INITIAL_STATE,\n        info: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default example;\n","// EXAMPLE_TYPE\nexport const EXAMPLE_TYPE = \"EXAMPLE_TYPE\";\n\n// AUTH TYPES\nexport const AUTH_LOGIN_USER = \"AUTH_LOGIN_USER\";\nexport const AUTH_LOGIN_USER_FAIL = \"AUTH_LOGIN_USER_FAIL\";\nexport const AUTH_LOGIN_USER_SUCCESS = \"AUTH_LOGIN_USER_SUCCESS\";\nexport const AUTH_CREATE_USER = \"AUTH_CREATE_USER\";\nexport const AUTH_CREATE_USER_FAIL = \"AUTH_CREATE_USER_FAIL\";\nexport const AUTH_CREATE_USER_SUCCESS = \"AUTH_CREATE_USER_SUCCESS\";\nexport const AUTH_LOGOUT_USER = \"AUTH_LOGOUT_USER\";\n","import { combineReducers } from \"redux\";\nimport example from \"./ExampleReducer\";\nexport default combineReducers({\n  example: example\n});\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function CenteredLoader() {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"calc(50%)\",\n        left: \"calc(50% - 50px)\"\n      }}\n    >\n      <Loader color=\"black\" type=\"BallTriangle\" height={100} width={100} />\n    </div>\n  );\n}\n","import React, { FunctionComponent } from \"react\";\nimport CenteredLoader from \"../common/CenteredLoader\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_EPISODES = gql`\n  query Episodes($page: Int) {\n    episodes(page: $page) {\n      info {\n        count\n        next\n      }\n      results {\n        id\n        name\n        air_date\n        episode\n        characters {\n          id\n        }\n        created\n      }\n    }\n  }\n`;\n\nconst HomePage: FunctionComponent = () => {\n  const { loading, error, data, fetchMore } = useQuery(GET_EPISODES, {\n    variables: {\n      $pages: 1\n    }\n  });\n  if (data?.episodes?.info?.next) {\n    fetchMore({\n      variables: {\n        page: data.episodes.info.next\n      },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        const nextObject = {\n          episodes: {\n            ...prev.episodes,\n            info: fetchMoreResult.episodes.info,\n            results: [\n              ...prev.episodes.results,\n              ...fetchMoreResult.episodes.results\n            ]\n          }\n        };\n        return nextObject;\n      }\n    });\n  }\n  return (\n    <div>\n      <h2 style={{ color: \"#477385\" }}>HomePage</h2>\n      {loading ? (\n        <CenteredLoader />\n      ) : error ? (\n        <div>error</div>\n      ) : (\n        <div>\n          <h4>Episodes: {data.episodes.info.count}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {data.episodes.results.map((episode: any, index: number) => (\n              <a\n                href={`/#/episode/${episode.id}`}\n                style={{\n                  margin: 10,\n                  textDecoration: \"none\",\n                  width: 200\n                }}\n                key={index}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"#2f9331\",\n                    padding: 10,\n                    color: \"#111\",\n                    borderRadius: \"0px 10px 0px 0px\"\n                  }}\n                >\n                  {episode.name}\n                </div>\n                <div\n                  style={{\n                    backgroundColor: \"#111\",\n                    color: \"#fff\",\n                    padding: 10,\n                    borderRadius: \"0px 0px 10px 10px\"\n                  }}\n                >\n                  <div>Code: {episode.episode}</div>\n                  <div>Air Date: {episode.air_date}</div>\n                </div>\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default HomePage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CenteredLoader from \"../common/CenteredLoader\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nexport default function Episode() {\n  const { episode } = useParams();\n  const GET_EPISODE = gql`\n    {\n      episode(id: ${episode}) {\n        id\n        name\n        air_date\n        episode\n        characters {\n          id\n          image\n          name\n        }\n        created\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_EPISODE);\n\n  function renderContent() {\n    if (loading) {\n      return <CenteredLoader />;\n    }\n    if (error) {\n      return <div>Error</div>;\n    }\n    console.log(\"data\", data);\n    return (\n      <div>\n        <h2 style={{ color: \"#477385\" }}>Episode</h2>\n        <h4>\n          {data.episode.name} ({data.episode.episode})\n        </h4>\n        <div>{data.episode.air_date}</div>\n        <div\n          style={{\n            marginTop: 10,\n            padding: 10\n          }}\n        >\n          <h5>Characters:</h5>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {data.episode.characters.length > 0 &&\n              data.episode.characters.map((character: any, index: number) => (\n                <a\n                  style={{\n                    padding: 10,\n                    margin: 10,\n                    width: 200,\n                    textAlign: \"center\",\n                    backgroundColor: \"#111\",\n                    borderRadius: 10,\n                    color: \"#fff\"\n                  }}\n                  href={`/#/character/${character.id}`}\n                  key={index}\n                >\n                  <img\n                    src={character.image}\n                    alt={character.name}\n                    height=\"100\"\n                  />\n                  <div> {character.name}</div>\n                </a>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return renderContent();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CenteredLoader from \"../common/CenteredLoader\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nexport default function Character() {\n  const { character } = useParams();\n  const GET_CHARACTER = gql`\n{\n  character (id: ${character}) {\n      id\n      name\n      status\n    species\n    type\n    gender\n    origin{\n      id\n      name\n    }\n    location{\n      id\n      name\n    }\n    image\n    \n    episode{\n      id\n      name\n    }\n    created\n      \n  \n  }\n}\n  `;\n\n  const { loading, error, data } = useQuery(GET_CHARACTER);\n\n  function renderContent() {\n    if (loading) {\n      return <CenteredLoader />;\n    }\n    if (error) {\n      return <div>{error}</div>;\n    }\n    return (\n      <div>\n        <h2 style={{ color: \"#477385\" }}>Character</h2>\n        <h4> {data.character.name}</h4>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\",\n            marginTop: 20,\n            marginBottom: 20\n          }}\n        >\n          <img src={data.character.image} alt={data.character.name} />\n          <div>\n            <h5>Information</h5>\n            <div>\n              Specie: {data.character.species} - Type:{\" \"}\n              {data.character.type || \"None\"} - Gender: {data.character.gender}-\n              Status: {data.character.status || \"\"}\n            </div>\n            <div>\n              Origin:{\" \"}\n              {data.character.origin.name !== \"unknown\" ? (\n                <a href={`/#/location/${data.character.origin.id}`}>\n                  {data.character.origin.name}\n                </a>\n              ) : (\n                \"unknown\"\n              )}\n            </div>\n            <div>\n              Location:{\" \"}\n              {data.character.location.name !== \"unknown\" ? (\n                <a href={`/#/location/${data.character.location.id}`}>\n                  {data.character.location.name}\n                </a>\n              ) : (\n                \"unknown\"\n              )}\n            </div>\n          </div>\n        </div>\n        <div>\n          <div>Episodes:</div>\n          <div>\n            {data.character.episode.length > 0 &&\n              data.character.episode.map((episode: any, index: number) => (\n                <a href={`/#/episode/${episode.id}`} key={index}>\n                  <div> {episode.name}</div>\n                </a>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return renderContent();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CenteredLoader from \"../common/CenteredLoader\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nexport default function Place() {\n  const { location } = useParams();\n  const GET_LOCATION = gql`\n    {\n  location  (id: ${location}) {\n      id\n      name\n    type\n    dimension\n    residents{\n      id\n      name\n      image\n    }\n    created\n  }\n}\n  `;\n\n  const { loading, error, data } = useQuery(GET_LOCATION);\n\n  function renderContent() {\n    if (loading) {\n      return <CenteredLoader />;\n    }\n    if (error) {\n      return <div>{error}</div>;\n    }\n    return (\n      <div>\n        <h2 style={{ color: \"#477385\" }}>Location</h2>\n        <h4>{data.location.name}</h4>\n        <div>Type: {data.location.type}</div>\n        <div>Dimension: {data.location.dimension}</div>\n        <div\n          style={{\n            marginTop: 10,\n            padding: 10\n          }}\n        >\n          <h5>Characters:</h5>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {data.location.residents.length > 0 &&\n              data.location.residents.map((character: any, index: number) => (\n                <a\n                  style={{\n                    padding: 10,\n                    margin: 10,\n                    width: 200,\n                    textAlign: \"center\",\n                    backgroundColor: \"#111\",\n                    borderRadius: 10,\n                    color: \"#fff\"\n                  }}\n                  href={`/#/character/${character.id}`}\n                  key={index}\n                >\n                  <img\n                    src={character.image}\n                    alt={character.name}\n                    height=\"100\"\n                  />\n                  <div> {character.name}</div>\n                </a>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return renderContent();\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      width: 400\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: 10\n    },\n    divider: {\n      height: 28,\n      margin: 4\n    }\n  })\n);\n\nexport default function SearchBar() {\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  function handleSearch() {\n    window.location.href = `/#/search/${search}`;\n  }\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        value={search}\n        onChange={(e: any) => setSearch(e.target.value)}\n        placeholder=\"Search on Wiki\"\n        inputProps={{ \"aria-label\": \"search on wiki\" }}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CenteredLoader from \"../common/CenteredLoader\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { NoUndefinedVariablesRule } from \"graphql\";\n\nexport default function Search() {\n  const { search } = useParams();\n  const GET_EPISODES = gql`\n    query Episodes($page: Int) {\n      episodes(page: $page, filter: { name: \"${search}\" }) {\n        info {\n          count\n          next\n        }\n        results {\n          id\n          name\n          air_date\n          episode\n          characters {\n            id\n          }\n          created\n        }\n      }\n    }\n  `;\n  const {\n    loading: loadingEpisodes,\n    error: errorEpisodes,\n    data: dataEpisodes,\n    fetchMore: fetchMoreEpisodes\n  } = useQuery(GET_EPISODES, {\n    variables: {\n      $pages: 1\n    }\n  });\n  if (dataEpisodes?.episodes?.info?.next) {\n    fetchMoreEpisodes({\n      variables: {\n        page: dataEpisodes.episodes.info.next\n      },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        const nextObject = {\n          episodes: {\n            ...prev.episodes,\n            info: fetchMoreResult.episodes.info,\n            results: [\n              ...prev.episodes.results,\n              ...fetchMoreResult.episodes.results\n            ]\n          }\n        };\n        return nextObject;\n      }\n    });\n  }\n\n  const GET_CHARACTERS = gql`\n  query Characters($page: Int) {\n    characters(page: $page, filter: { name: \"${search}\" }) {\n      info {\n        count\n        next\n      }\n      results {\n        id\n      name\n      status\n    species\n    type\n    gender\n    origin{\n      id\n      name\n    }\n    location{\n      id\n      name\n    }\n    image\n    \n    episode{\n      id\n      name\n    }\n    created\n\n\n        \n      }\n    }\n  }\n`;\n  const {\n    loading: loadingCharacters,\n    error: errorCharacters,\n    data: dataCharacters,\n    fetchMore: fetchMoreCharacters\n  } = useQuery(GET_CHARACTERS, {\n    variables: {\n      $pages: 1\n    }\n  });\n  if (dataCharacters?.characters?.info?.next) {\n    fetchMoreCharacters({\n      variables: {\n        page: dataCharacters.characters.info.next\n      },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        const nextObject = {\n          characters: {\n            ...prev.characters,\n            info: fetchMoreResult.characters.info,\n            results: [\n              ...prev.characters.results,\n              ...fetchMoreResult.characters.results\n            ]\n          }\n        };\n        return nextObject;\n      }\n    });\n  }\n\n  const GET_LOCATIONS = gql`\n  query Locations($page: Int) {\n    locations(page: $page, filter: { name: \"${search}\" }) {\n      info {\n        count\n        next\n      }\n      results {\n      id\n      name\n    type\n    dimension\n    residents{\n      id\n      name\n      image\n    }\n    created\n\n        \n      }\n    }\n  }\n`;\n  const {\n    loading: loadingLocations,\n    error: errorLocations,\n    data: dataLocations,\n    fetchMore: fetchMoreLocations\n  } = useQuery(GET_LOCATIONS, {\n    variables: {\n      $pages: 1\n    }\n  });\n  if (dataLocations?.locations?.info?.next) {\n    fetchMoreLocations({\n      variables: {\n        page: dataLocations.locations.info.next\n      },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        const nextObject = {\n          locations: {\n            ...prev.locations,\n            info: fetchMoreResult.locations.info,\n            results: [\n              ...prev.locations.results,\n              ...fetchMoreResult.locations.results\n            ]\n          }\n        };\n        return nextObject;\n      }\n    });\n  }\n\n  return (\n    <div>\n      <h2 style={{ color: \"#477385\" }}>Search</h2>\n      {loadingEpisodes ? (\n        <CenteredLoader />\n      ) : (\n        <div>\n          <h4>Episodes: {dataEpisodes?.episodes?.info?.count}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {dataEpisodes?.episodes?.results\n              ? dataEpisodes.episodes.results.map(\n                  (episode: any, index: number) => (\n                    <a\n                      href={`/#/episode/${episode.id}`}\n                      style={{\n                        margin: 10,\n                        textDecoration: \"none\",\n                        width: 200\n                      }}\n                      key={index}\n                    >\n                      <div\n                        style={{\n                          backgroundColor: \"#2f9331\",\n                          padding: 10,\n                          color: \"#111\",\n                          borderRadius: \"0px 10px 0px 0px\"\n                        }}\n                      >\n                        {episode.name}\n                      </div>\n                      <div\n                        style={{\n                          backgroundColor: \"#111\",\n                          color: \"#fff\",\n                          padding: 10,\n                          borderRadius: \"0px 0px 10px 10px\"\n                        }}\n                      >\n                        <div>Code: {episode.episode}</div>\n                        <div>Air Date: {episode.air_date}</div>\n                      </div>\n                    </a>\n                  )\n                )\n              : \"No results found.\"}\n          </div>\n        </div>\n      )}\n      {loadingCharacters ? (\n        <CenteredLoader />\n      ) : (\n        <div>\n          <h4>Characters: {dataCharacters?.characters?.info?.count}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {dataCharacters?.characters?.results\n              ? dataCharacters.characters.results.map(\n                  (character: any, index: number) => (\n                    <div\n                      style={{\n                        margin: 10,\n                        width: 200\n                      }}\n                      key={index}\n                    >\n                      <a\n                        href={`/#/character/${character.id}`}\n                        style={{\n                          width: \"200px\",\n                          backgroundColor: \"#2f9331\",\n                          display: \"block\",\n                          padding: 10,\n                          borderRadius: \"0px 10px 0px 0px\"\n                        }}\n                      >\n                        {character.name}\n                      </a>\n                      <div\n                        style={{\n                          backgroundColor: \"#111\",\n                          color: \"#fff\",\n                          padding: 10,\n                          borderRadius: \"0px 0px 10px 10px\"\n                        }}\n                      >\n                        <div style={{ textAlign: \"center\" }}>\n                          <img\n                            src={character.image}\n                            alt={character.name}\n                            width=\"90\"\n                          />\n                        </div>\n                        <div>\n                          Specie: {character.species} - Type:{\" \"}\n                          {character.type || \"None\"} - Gender:{\" \"}\n                          {character.gender}\n                        </div>\n                        <div>\n                          Origin:{\" \"}\n                          {character.origin.name !== \"unknown\" ? (\n                            <a href={`/#/location/${character.origin.id}`}>\n                              {character.origin.name}\n                            </a>\n                          ) : (\n                            \"unknown\"\n                          )}\n                        </div>\n                        <div>\n                          Location:{\" \"}\n                          {character.location.name !== \"unknown\" ? (\n                            <a href={`/#/location/${character.location.id}`}>\n                              {character.location.name}\n                            </a>\n                          ) : (\n                            \"unknown\"\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  )\n                )\n              : \"No results found.\"}\n          </div>\n        </div>\n      )}\n      {loadingLocations ? (\n        <CenteredLoader />\n      ) : (\n        <div>\n          <h4>Locations: {dataLocations?.locations?.info?.count}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            {dataLocations?.locations?.results\n              ? dataLocations.locations.results.map(\n                  (location: any, index: number) => (\n                    <a\n                      href={`/#/location/${location.id}`}\n                      style={{\n                        margin: 10,\n                        textDecoration: \"none\",\n                        width: 200\n                      }}\n                      key={index}\n                    >\n                      <div\n                        style={{\n                          backgroundColor: \"#2f9331\",\n                          padding: 10,\n                          display: \"block\",\n                          color: \"#111\",\n                          borderRadius: \"0px 10px 0px 0px\"\n                        }}\n                      >\n                        {location.name}\n                      </div>\n                      <div\n                        style={{\n                          backgroundColor: \"#111\",\n                          color: \"#fff\",\n                          padding: 10,\n                          borderRadius: \"0px 0px 10px 10px\"\n                        }}\n                      >\n                        <div>Type: {location.type}</div>\n                        <div>Dimension: {location.dimension}</div>\n                        <div>Residents: {location.residents.length}</div>\n                      </div>\n                    </a>\n                  )\n                )\n              : \"No results found.\"}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { Route, HashRouter } from \"react-router-dom\";\nimport React, { FunctionComponent, useEffect, Dispatch } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  ExampleInterface,\n  ExampleActionInterface\n} from \"../redux/reducers/ExampleReducer\";\nimport { setExampleInfo } from \"../redux/actions/ExampleActions\";\nimport CenteredLoader from \"./common/CenteredLoader\";\nimport HomePage from \"./HomePage/HomePage\";\nimport Episode from \"./Episode/Episode\";\nimport Character from \"./Character/Character\";\nimport Place from \"./Place/Place\";\nimport SearchBar from \"./common/SearchBar\";\nimport Search from \"./Search/Search\";\n\ninterface actionsType {\n  setExampleInfo: () => (dispatch: Dispatch<ExampleActionInterface>) => void;\n}\ninterface RootState {\n  example: ExampleInterface;\n}\n\nconst actionsReducers: actionsType = {\n  setExampleInfo\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  example: state.example\n});\n\nconst connector = connect(mapStateToProps, actionsReducers);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ninterface MainProps {}\n\nconst Main: FunctionComponent<MainProps & PropsFromRedux> = (\n  props: PropsFromRedux\n) => {\n  useEffect(() => {\n    props.setExampleInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function renderContent() {\n    if (props.example.loading) {\n      return <CenteredLoader />;\n    }\n\n    return (\n      <HashRouter>\n        <div>\n          <div style={{ marginBottom: 100 }} className=\"content\">\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/episode/:episode?\" component={Episode} />\n            <Route path=\"/character/:character?\" component={Character} />\n            <Route path=\"/location/:location?\" component={Place} />\n            <Route path=\"/search/:search\" component={Search} />\n            {/* \n              \n              <Route path=\"/shop\" component={Shop} />\n              />\n\n              <Route path=\"/search-game\" component={SearchGame} />\n              <Route path=\"/shop\" component={Shop} /> */}\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n  return (\n    <div style={{ margin: 30 }}>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          marginBottom: 20\n        }}\n      >\n        <h1>\n          <a\n            href=\"/#/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"#926f44\"\n            }}\n          >\n            Rick And Morty Wiki\n          </a>\n        </h1>\n        <SearchBar />\n      </div>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default connector(Main);\n","import { EXAMPLE_TYPE } from \"./types\";\nimport { ExampleActionInterface } from \"../reducers/ExampleReducer\";\nimport { Dispatch } from \"react\";\n\nexport const setExampleInfo = () => {\n  return (dispatch: Dispatch<ExampleActionInterface>) => {\n    dispatch({\n      type: EXAMPLE_TYPE,\n      payload: { example: \"hi\" }\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./redux/reducers\";\nimport Main from \"./components/Main\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport ApolloClient from \"apollo-boost\";\nimport { URL } from \"./components/common/constants\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nconst client = new ApolloClient({\n  uri: URL\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#00695c\",\n      light: \"#33877c\",\n      dark: \"#004940\",\n      contrastText: \"#fff\"\n    }\n  }\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Provider store={createStore(reducer, {}, applyMiddleware(ReduxThunk))}>\n          <MuiThemeProvider theme={theme}>\n            <Main />\n          </MuiThemeProvider>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n","export const URL = \"https://integracion-rick-morty-api.herokuapp.com/graphql\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}